"""Initial migration

Revision ID: 8895d4330f5c
Revises: 
Create Date: 2025-02-19 21:50:32.452573

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8895d4330f5c'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cart_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cart_items_id'), 'cart_items', ['id'], unique=False)
    op.add_column('order_items', sa.Column('price', sa.Float(), nullable=True))
    op.add_column('order_items', sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.drop_column('order_items', 'unit_price')
    op.add_column('orders', sa.Column('user_id', sa.Integer(), nullable=True))
    op.add_column('orders', sa.Column('payment_id', sa.String(), nullable=True))
    op.add_column('orders', sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True))
    op.alter_column('orders', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.drop_constraint('orders_customer_id_fkey', 'orders', type_='foreignkey')
    op.drop_constraint('orders_seller_id_fkey', 'orders', type_='foreignkey')
    op.create_foreign_key(None, 'orders', 'users', ['user_id'], ['id'])
    op.drop_column('orders', 'payment_status')
    op.drop_column('orders', 'customer_id')
    op.drop_column('orders', 'seller_id')
    op.drop_column('orders', 'payment_method')
    op.add_column('products', sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True))
    op.alter_column('products', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.add_column('users', sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True))
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('users', 'hashed_password',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.create_index(op.f('ix_users_full_name'), 'users', ['full_name'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_full_name'), table_name='users')
    op.alter_column('users', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('users', 'hashed_password',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_column('users', 'updated_at')
    op.alter_column('products', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.drop_column('products', 'updated_at')
    op.add_column('orders', sa.Column('payment_method', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('orders', sa.Column('seller_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('orders', sa.Column('customer_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('orders', sa.Column('payment_status', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'orders', type_='foreignkey')
    op.create_foreign_key('orders_seller_id_fkey', 'orders', 'users', ['seller_id'], ['id'])
    op.create_foreign_key('orders_customer_id_fkey', 'orders', 'customers', ['customer_id'], ['id'])
    op.alter_column('orders', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.drop_column('orders', 'updated_at')
    op.drop_column('orders', 'payment_id')
    op.drop_column('orders', 'user_id')
    op.add_column('order_items', sa.Column('unit_price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.drop_column('order_items', 'created_at')
    op.drop_column('order_items', 'price')
    op.drop_index(op.f('ix_cart_items_id'), table_name='cart_items')
    op.drop_table('cart_items')
    # ### end Alembic commands ### 